
package GUI;

import Companies.Company;
import Store.FileEntity;
import Store.JSONStore;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.Global;

/*
* made by: victorpointud
*/


public class CompanyFrame extends javax.swing.JFrame {
    
    JSONStore storeJSON = new JSONStore();
    public javax.swing.JLabel getGraphicPCQuantity() {
        return GraphicPCQuantity;
    }

    public javax.swing.JLabel getNormalPCQuantity() {
        return NormalPCQuantity;
    }

    public javax.swing.JLabel getIntegratorQuantity() {
        return IntegratorQuantity;
    }

    public Company company;

    public CompanyFrame(Company company) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.company = company;
        company.updateEmployeeTimings();
        BasePlatesProgressBar.setMinimum(0);
        BasePlatesProgressBar.setMaximum(company.getCompanyDrive().getMaxBasePlates());
        CPUProgressBar.setMinimum(0);
        CPUProgressBar.setMaximum(company.getCompanyDrive().getMaxCPUs());
        GraphicCardProgressBar.setMinimum(0);
        GraphicCardProgressBar.setMaximum(company.getCompanyDrive().getMaxGraphicsCards());
        RAMProgressBar.setMinimum(0);
        RAMProgressBar.setMaximum(company.getCompanyDrive().getMaxRAMs());
        PowerSupplyProgressBar.setMinimum(0);
        PowerSupplyProgressBar.setMaximum(company.getCompanyDrive().getMaxPowerSupplies());
        WBPQuantity.setText(String.valueOf(company.getWorkforce()[0].getSize()));
        WCPUQuantity.setText(String.valueOf(company.getWorkforce()[1].getSize()));
        WRAMQuantity.setText(String.valueOf(company.getWorkforce()[2].getSize()));
        WFEQuantity.setText(String.valueOf(company.getWorkforce()[3].getSize()));
        WTGQuantity.setText(String.valueOf(company.getWorkforce()[4].getSize()));
        IntegratorsQuantity.setText(String.valueOf(company.getWorkforce()[5].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        

    }

    public CompanyFrame(Company company, CompanyFrame seconCompanyWindow) {
        initComponents();
        this.company = company;
        BasePlatesProgressBar.setMinimum(0);
        BasePlatesProgressBar.setMaximum(company.getCompanyDrive().getMaxBasePlates());
        CPUProgressBar.setMinimum(0);
        CPUProgressBar.setMaximum(company.getCompanyDrive().getMaxCPUs());
        GraphicCardProgressBar.setMinimum(0);
        GraphicCardProgressBar.setMaximum(company.getCompanyDrive().getMaxGraphicsCards());
        RAMProgressBar.setMinimum(0);
        RAMProgressBar.setMaximum(company.getCompanyDrive().getMaxRAMs());
        PowerSupplyProgressBar.setMinimum(0);
        PowerSupplyProgressBar.setMaximum(company.getCompanyDrive().getMaxPowerSupplies());
        WBPQuantity.setText(String.valueOf(company.getWorkforce()[0].getSize()));
        WCPUQuantity.setText(String.valueOf(company.getWorkforce()[1].getSize()));
        WRAMQuantity.setText(String.valueOf(company.getWorkforce()[2].getSize()));
        WFEQuantity.setText(String.valueOf(company.getWorkforce()[3].getSize()));
        WTGQuantity.setText(String.valueOf(company.getWorkforce()[4].getSize()));
        IntegratorsQuantity.setText(String.valueOf(company.getWorkforce()[5].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        companyLogo = new javax.swing.JLabel();
        textGraphicCard = new javax.swing.JLabel();
        textBasePlate = new javax.swing.JLabel();
        textCPU = new javax.swing.JLabel();
        textRAM = new javax.swing.JLabel();
        textPowerSupply = new javax.swing.JLabel();
        BasePlatesProgressBar = new javax.swing.JProgressBar();
        CPUProgressBar = new javax.swing.JProgressBar();
        RAMProgressBar = new javax.swing.JProgressBar();
        PowerSupplyProgressBar = new javax.swing.JProgressBar();
        GraphicCardProgressBar = new javax.swing.JProgressBar();
        UtilityLabel = new javax.swing.JLabel();
        EarningsLabel = new javax.swing.JLabel();
        CostsLabel = new javax.swing.JLabel();
        WorkersRAMLabel = new javax.swing.JLabel();
        WorkersBPLabel = new javax.swing.JLabel();
        WorkersCPULabel = new javax.swing.JLabel();
        WorkersIntegratorsLabel = new javax.swing.JLabel();
        WorkersFELabel = new javax.swing.JLabel();
        WorkersTGLabel = new javax.swing.JLabel();
        plusButton6 = new javax.swing.JButton();
        minusButton6 = new javax.swing.JButton();
        IntegratorsQuantity = new javax.swing.JLabel();
        plusButton5 = new javax.swing.JButton();
        minusButton5 = new javax.swing.JButton();
        WTGQuantity = new javax.swing.JLabel();
        plusButton4 = new javax.swing.JButton();
        minusButton4 = new javax.swing.JButton();
        WFEQuantity = new javax.swing.JLabel();
        plusButton3 = new javax.swing.JButton();
        minusButton3 = new javax.swing.JButton();
        WRAMQuantity = new javax.swing.JLabel();
        plusButton2 = new javax.swing.JButton();
        minusButton2 = new javax.swing.JButton();
        WCPUQuantity = new javax.swing.JLabel();
        plusButton1 = new javax.swing.JButton();
        minusButton1 = new javax.swing.JButton();
        WBPQuantity = new javax.swing.JLabel();
        CompanyUtilitys = new javax.swing.JLabel();
        CompanyCosts = new javax.swing.JLabel();
        CompanyEarnings = new javax.swing.JLabel();
        GraphicCardLabel = new javax.swing.JLabel();
        BasePlatesLabel = new javax.swing.JLabel();
        CPULabel = new javax.swing.JLabel();
        RAMLabel = new javax.swing.JLabel();
        PowerSupplyLabel = new javax.swing.JLabel();
        Costs = new javax.swing.JLabel();
        GraphicCardCost = new javax.swing.JLabel();
        BasePlateCost = new javax.swing.JLabel();
        CPUCost = new javax.swing.JLabel();
        RAMCost = new javax.swing.JLabel();
        PowerSupplyCost = new javax.swing.JLabel();
        FaultsLabel = new javax.swing.JLabel();
        PMStatusLabel = new javax.swing.JLabel();
        PMCostLabel = new javax.swing.JLabel();
        Faults = new javax.swing.JLabel();
        PMCost = new javax.swing.JLabel();
        PMStatus = new javax.swing.JLabel();
        DirectorStatusLabel = new javax.swing.JLabel();
        DirectorStatus = new javax.swing.JLabel();
        DirectorCostLabel = new javax.swing.JLabel();
        DirectorCosts = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        WorkersAvailableLabel = new javax.swing.JLabel();
        WorkersAvailableQuantity = new javax.swing.JLabel();
        DaysLeftLabel = new javax.swing.JLabel();
        CountDown = new javax.swing.JLabel();
        GraphicPCLabel = new javax.swing.JLabel();
        IntegratorCostLabel = new javax.swing.JLabel();
        GraphicPCQuantity = new javax.swing.JLabel();
        NormalPCQuantity = new javax.swing.JLabel();
        NormalPCLabel = new javax.swing.JLabel();
        IntegratorQuantity = new javax.swing.JLabel();
        bg5 = new javax.swing.JLabel();
        bg7 = new javax.swing.JLabel();
        bg8 = new javax.swing.JLabel();
        bg6 = new javax.swing.JLabel();
        bgLabel = new javax.swing.JLabel();
        bg9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textGraphicCard.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        textGraphicCard.setForeground(new java.awt.Color(255, 255, 255));
        textGraphicCard.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textGraphicCard.setText("0");
        getContentPane().add(textGraphicCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 30, 50));

        textBasePlate.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        textBasePlate.setForeground(new java.awt.Color(255, 255, 255));
        textBasePlate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textBasePlate.setText("0");
        textBasePlate.setToolTipText("");
        getContentPane().add(textBasePlate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 50, 50));

        textCPU.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        textCPU.setForeground(new java.awt.Color(255, 255, 255));
        textCPU.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textCPU.setText("0");
        getContentPane().add(textCPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 60, 50));

        textRAM.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        textRAM.setForeground(new java.awt.Color(255, 255, 255));
        textRAM.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textRAM.setText("0");
        getContentPane().add(textRAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 60, 50));

        textPowerSupply.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        textPowerSupply.setForeground(new java.awt.Color(255, 255, 255));
        textPowerSupply.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        textPowerSupply.setText("0");
        getContentPane().add(textPowerSupply, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 50, 50));

        BasePlatesProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        BasePlatesProgressBar.setForeground(new java.awt.Color(255, 153, 0));
        getContentPane().add(BasePlatesProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 125, 40));

        CPUProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        CPUProgressBar.setForeground(new java.awt.Color(255, 204, 0));
        getContentPane().add(CPUProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 125, 40));

        RAMProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        RAMProgressBar.setForeground(new java.awt.Color(255, 153, 0));
        RAMProgressBar.setToolTipText("");
        getContentPane().add(RAMProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 125, 40));

        PowerSupplyProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        PowerSupplyProgressBar.setForeground(new java.awt.Color(255, 153, 0));
        getContentPane().add(PowerSupplyProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 125, 40));

        GraphicCardProgressBar.setBackground(new java.awt.Color(255, 255, 255));
        GraphicCardProgressBar.setForeground(new java.awt.Color(255, 153, 0));
        getContentPane().add(GraphicCardProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 125, 40));

        UtilityLabel.setBackground(new java.awt.Color(255, 255, 255));
        UtilityLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        UtilityLabel.setForeground(new java.awt.Color(255, 255, 255));
        UtilityLabel.setText("Utilidad:");
        getContentPane().add(UtilityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 80, 30));

        EarningsLabel.setBackground(new java.awt.Color(255, 255, 255));
        EarningsLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        EarningsLabel.setForeground(new java.awt.Color(255, 255, 255));
        EarningsLabel.setText("Ganancias:");
        getContentPane().add(EarningsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 80, 30));

        CostsLabel.setBackground(new java.awt.Color(255, 255, 255));
        CostsLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        CostsLabel.setForeground(new java.awt.Color(255, 255, 255));
        CostsLabel.setText("Costos:");
        getContentPane().add(CostsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 80, 30));

        WorkersRAMLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersRAMLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersRAMLabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersRAMLabel.setText("Productores de RAM");
        getContentPane().add(WorkersRAMLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 450, 170, 30));

        WorkersBPLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersBPLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersBPLabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersBPLabel.setText("Productores de Placas Base");
        getContentPane().add(WorkersBPLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 210, 30));

        WorkersCPULabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersCPULabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersCPULabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersCPULabel.setText("Productores de CPU");
        getContentPane().add(WorkersCPULabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, 180, 30));

        WorkersIntegratorsLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersIntegratorsLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersIntegratorsLabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersIntegratorsLabel.setText("Integradores:");
        getContentPane().add(WorkersIntegratorsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 570, 150, 30));

        WorkersFELabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersFELabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersFELabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersFELabel.setText("Productores de F.E");
        getContentPane().add(WorkersFELabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, 180, 30));

        WorkersTGLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersTGLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersTGLabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersTGLabel.setText("Productores de T.G");
        getContentPane().add(WorkersTGLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 530, 180, 30));

        plusButton6.setText("+");
        plusButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 560, 50, 40));

        minusButton6.setText("-");
        minusButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 560, 50, 40));

        IntegratorsQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        IntegratorsQuantity.setForeground(new java.awt.Color(255, 255, 255));
        IntegratorsQuantity.setText("0");
        getContentPane().add(IntegratorsQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 570, 30, 20));

        plusButton5.setText("+");
        plusButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 520, 50, 40));

        minusButton5.setText("-");
        minusButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 50, 40));

        WTGQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WTGQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WTGQuantity.setText("0");
        getContentPane().add(WTGQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 530, 30, 20));

        plusButton4.setText("+");
        plusButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 480, 50, 40));

        minusButton4.setText("-");
        minusButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 50, 40));

        WFEQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WFEQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WFEQuantity.setText("0");
        getContentPane().add(WFEQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 490, 30, 20));

        plusButton3.setText("+");
        plusButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 440, 50, 40));

        minusButton3.setText("-");
        minusButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, 50, 40));

        WRAMQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WRAMQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WRAMQuantity.setText("0");
        getContentPane().add(WRAMQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 450, 30, 20));

        plusButton2.setText("+");
        plusButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, 50, 40));

        minusButton2.setText("-");
        minusButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 400, 50, 40));

        WCPUQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WCPUQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WCPUQuantity.setText("0");
        getContentPane().add(WCPUQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 410, 30, 20));

        plusButton1.setText("+");
        plusButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(plusButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 360, 50, 40));

        minusButton1.setText("-");
        minusButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(minusButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 360, 50, 40));

        WBPQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WBPQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WBPQuantity.setText("0");
        getContentPane().add(WBPQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 370, 30, 20));

        CompanyUtilitys.setBackground(new java.awt.Color(255, 255, 255));
        CompanyUtilitys.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CompanyUtilitys.setForeground(new java.awt.Color(255, 255, 255));
        CompanyUtilitys.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CompanyUtilitys.setText("0");
        getContentPane().add(CompanyUtilitys, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 100, 30));

        CompanyCosts.setBackground(new java.awt.Color(255, 255, 255));
        CompanyCosts.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CompanyCosts.setForeground(new java.awt.Color(255, 255, 255));
        CompanyCosts.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CompanyCosts.setText("0");
        getContentPane().add(CompanyCosts, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 100, 30));

        CompanyEarnings.setBackground(new java.awt.Color(255, 255, 255));
        CompanyEarnings.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CompanyEarnings.setForeground(new java.awt.Color(255, 255, 255));
        CompanyEarnings.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CompanyEarnings.setText("0");
        getContentPane().add(CompanyEarnings, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 100, 30));

        GraphicCardLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        GraphicCardLabel.setForeground(new java.awt.Color(255, 255, 255));
        GraphicCardLabel.setText("Tarjeta Gráfica");
        getContentPane().add(GraphicCardLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 120, 50));

        BasePlatesLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        BasePlatesLabel.setForeground(new java.awt.Color(255, 255, 255));
        BasePlatesLabel.setText("Placas Base");
        getContentPane().add(BasePlatesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 100, 50));

        CPULabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        CPULabel.setForeground(new java.awt.Color(255, 255, 255));
        CPULabel.setText("CPU");
        getContentPane().add(CPULabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 100, 50));

        RAMLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        RAMLabel.setForeground(new java.awt.Color(255, 255, 255));
        RAMLabel.setText("RAM");
        getContentPane().add(RAMLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 100, 50));

        PowerSupplyLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        PowerSupplyLabel.setForeground(new java.awt.Color(255, 255, 255));
        PowerSupplyLabel.setText("Fuente de Energía");
        getContentPane().add(PowerSupplyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 130, 50));

        Costs.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        Costs.setForeground(new java.awt.Color(255, 255, 255));
        Costs.setText("Gastos:");
        getContentPane().add(Costs, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 60, -1));

        GraphicCardCost.setForeground(new java.awt.Color(255, 255, 255));
        GraphicCardCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        GraphicCardCost.setText("0");
        getContentPane().add(GraphicCardCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, 90, -1));

        BasePlateCost.setForeground(new java.awt.Color(255, 255, 255));
        BasePlateCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BasePlateCost.setText("0");
        getContentPane().add(BasePlateCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 90, -1));

        CPUCost.setForeground(new java.awt.Color(255, 255, 255));
        CPUCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CPUCost.setText("0");
        getContentPane().add(CPUCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 90, -1));

        RAMCost.setForeground(new java.awt.Color(255, 255, 255));
        RAMCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        RAMCost.setText("0");
        getContentPane().add(RAMCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 90, -1));

        PowerSupplyCost.setForeground(new java.awt.Color(255, 255, 255));
        PowerSupplyCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PowerSupplyCost.setText("0");
        getContentPane().add(PowerSupplyCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 90, -1));

        FaultsLabel.setBackground(new java.awt.Color(255, 255, 255));
        FaultsLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        FaultsLabel.setForeground(new java.awt.Color(255, 255, 255));
        FaultsLabel.setText("Faltas:");
        getContentPane().add(FaultsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 80, 30));

        PMStatusLabel.setBackground(new java.awt.Color(255, 255, 255));
        PMStatusLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        PMStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        PMStatusLabel.setText("Status PM:");
        getContentPane().add(PMStatusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 80, 30));

        PMCostLabel.setBackground(new java.awt.Color(255, 255, 255));
        PMCostLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        PMCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        PMCostLabel.setText("Costos:");
        getContentPane().add(PMCostLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 210, 80, 30));

        Faults.setBackground(new java.awt.Color(255, 255, 255));
        Faults.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Faults.setForeground(new java.awt.Color(255, 255, 255));
        Faults.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Faults.setText("0");
        getContentPane().add(Faults, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 250, 100, 30));

        PMCost.setBackground(new java.awt.Color(255, 255, 255));
        PMCost.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        PMCost.setForeground(new java.awt.Color(255, 255, 255));
        PMCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PMCost.setText("0");
        getContentPane().add(PMCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 210, 100, 30));

        PMStatus.setBackground(new java.awt.Color(255, 255, 255));
        PMStatus.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        PMStatus.setForeground(new java.awt.Color(255, 255, 255));
        PMStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PMStatus.setText("Viendo anime");
        getContentPane().add(PMStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 100, 30));

        DirectorStatusLabel.setBackground(new java.awt.Color(255, 255, 255));
        DirectorStatusLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        DirectorStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        DirectorStatusLabel.setText("Status Director:");
        getContentPane().add(DirectorStatusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 120, 30));

        DirectorStatus.setBackground(new java.awt.Color(255, 255, 255));
        DirectorStatus.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DirectorStatus.setForeground(new java.awt.Color(255, 255, 255));
        DirectorStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DirectorStatus.setText("Trabajando");
        getContentPane().add(DirectorStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 100, 30));

        DirectorCostLabel.setBackground(new java.awt.Color(255, 255, 255));
        DirectorCostLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        DirectorCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        DirectorCostLabel.setText("Costos:");
        getContentPane().add(DirectorCostLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 80, 30));

        DirectorCosts.setBackground(new java.awt.Color(255, 255, 255));
        DirectorCosts.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DirectorCosts.setForeground(new java.awt.Color(255, 255, 255));
        DirectorCosts.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DirectorCosts.setText("0");
        getContentPane().add(DirectorCosts, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 40, 100, 30));

        BackButton.setBackground(new java.awt.Color(0, 0, 0));
        BackButton.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Volver");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 40));

        WorkersAvailableLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkersAvailableLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        WorkersAvailableLabel.setForeground(new java.awt.Color(255, 255, 255));
        WorkersAvailableLabel.setText("Trabajadores disponibles:");
        getContentPane().add(WorkersAvailableLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, 180, 30));

        WorkersAvailableQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        WorkersAvailableQuantity.setForeground(new java.awt.Color(255, 255, 255));
        WorkersAvailableQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        WorkersAvailableQuantity.setText("0");
        getContentPane().add(WorkersAvailableQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, 90, 30));

        DaysLeftLabel.setBackground(new java.awt.Color(255, 255, 255));
        DaysLeftLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        DaysLeftLabel.setForeground(new java.awt.Color(255, 255, 255));
        DaysLeftLabel.setText("Días restantes");
        getContentPane().add(DaysLeftLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 130, 30));

        CountDown.setBackground(new java.awt.Color(255, 255, 255));
        CountDown.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        CountDown.setForeground(new java.awt.Color(255, 255, 255));
        CountDown.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CountDown.setText("0");
        getContentPane().add(CountDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 100, 30));

        GraphicPCLabel.setBackground(new java.awt.Color(255, 255, 255));
        GraphicPCLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        GraphicPCLabel.setForeground(new java.awt.Color(255, 255, 255));
        GraphicPCLabel.setText("Computadoras con gráficas:");
        getContentPane().add(GraphicPCLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 200, 30));

        IntegratorCostLabel.setBackground(new java.awt.Color(255, 255, 255));
        IntegratorCostLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        IntegratorCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        IntegratorCostLabel.setText("Costos Integradores:");
        getContentPane().add(IntegratorCostLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 180, 30));

        GraphicPCQuantity.setBackground(new java.awt.Color(255, 255, 255));
        GraphicPCQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        GraphicPCQuantity.setForeground(new java.awt.Color(255, 255, 255));
        GraphicPCQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        GraphicPCQuantity.setText("0");
        getContentPane().add(GraphicPCQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 100, 30));

        NormalPCQuantity.setBackground(new java.awt.Color(255, 255, 255));
        NormalPCQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        NormalPCQuantity.setForeground(new java.awt.Color(255, 255, 255));
        NormalPCQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NormalPCQuantity.setText("0");
        getContentPane().add(NormalPCQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 170, 100, 30));

        NormalPCLabel.setBackground(new java.awt.Color(255, 255, 255));
        NormalPCLabel.setFont(new java.awt.Font("Algerian", 1, 12)); // NOI18N
        NormalPCLabel.setForeground(new java.awt.Color(255, 255, 255));
        NormalPCLabel.setText("Computadoras normales:");
        getContentPane().add(NormalPCLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 180, 30));

        IntegratorQuantity.setBackground(new java.awt.Color(255, 255, 255));
        IntegratorQuantity.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        IntegratorQuantity.setForeground(new java.awt.Color(255, 255, 255));
        IntegratorQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IntegratorQuantity.setText("0");
        getContentPane().add(IntegratorQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 100, 30));

        bg5.setBackground(new java.awt.Color(0, 0, 0));
        bg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo-negrito.jpg"))); // NOI18N
        getContentPane().add(bg5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 410, 730));

        bg7.setBackground(new java.awt.Color(0, 0, 0));
        bg7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo-negrito.jpg"))); // NOI18N
        getContentPane().add(bg7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 470, 50));

        bg8.setBackground(new java.awt.Color(0, 0, 0));
        bg8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo-negrito.jpg"))); // NOI18N
        getContentPane().add(bg8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, -160, 410, 730));

        bg6.setBackground(new java.awt.Color(0, 0, 0));
        bg6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo-negrito.jpg"))); // NOI18N
        getContentPane().add(bg6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 120, 40));

        bgLabel.setBackground(new java.awt.Color(255, 153, 0));
        getContentPane().add(bgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -40, 900, 620));

        bg9.setBackground(new java.awt.Color(0, 0, 0));
        bg9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo-negrito.jpg"))); // NOI18N
        getContentPane().add(bg9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 470, 250));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minusButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton1ActionPerformed
        company.fireEmployee(0);
        WBPQuantity.setText(String.valueOf(company.getWorkforce()[0].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton1ActionPerformed

    private void plusButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton1ActionPerformed
        company.hireEmployee(0);
        WBPQuantity.setText(String.valueOf(company.getWorkforce()[0].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton1ActionPerformed

    private void plusButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton2ActionPerformed
        company.hireEmployee(1);
        WCPUQuantity.setText(String.valueOf(company.getWorkforce()[1].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton2ActionPerformed

    private void minusButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton2ActionPerformed
        company.fireEmployee(1);
        WCPUQuantity.setText(String.valueOf(company.getWorkforce()[1].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton2ActionPerformed

    private void plusButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton3ActionPerformed
        company.hireEmployee(2);
        WRAMQuantity.setText(String.valueOf(company.getWorkforce()[2].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton3ActionPerformed

    private void minusButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton3ActionPerformed
        company.fireEmployee(2);
        WRAMQuantity.setText(String.valueOf(company.getWorkforce()[2].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton3ActionPerformed

    private void plusButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton4ActionPerformed
        company.hireEmployee(3);
        WFEQuantity.setText(String.valueOf(company.getWorkforce()[3].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton4ActionPerformed

    private void minusButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton4ActionPerformed
        company.fireEmployee(3);
        WFEQuantity.setText(String.valueOf(company.getWorkforce()[3].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton4ActionPerformed

    private void plusButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton5ActionPerformed
        company.hireEmployee(4);
        WTGQuantity.setText(String.valueOf(company.getWorkforce()[4].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton5ActionPerformed

    private void minusButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton5ActionPerformed
        company.fireEmployee(4);
        WTGQuantity.setText(String.valueOf(company.getWorkforce()[4].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton5ActionPerformed

    private void plusButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton6ActionPerformed
        company.hireEmployee(5);
        IntegratorsQuantity.setText(String.valueOf(company.getWorkforce()[5].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plusButton6ActionPerformed

    private void minusButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton6ActionPerformed
        company.fireEmployee(5);
        IntegratorsQuantity.setText(String.valueOf(company.getWorkforce()[5].getSize()));
        WorkersAvailableQuantity.setText(String.valueOf(company.getTotalEmployees()));
        try {
            storeJSON.setFile(getFile(), company.getCompanyRules().getCompanyNumber());
        } catch (IOException ex) {
            Logger.getLogger(CompanyFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_minusButton6ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.company.initiateBankruptcy();
        this.company = null;
        this.setVisible(false);
        Global.mainMenu.setVisible(true);

    }//GEN-LAST:event_BackButtonActionPerformed

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow

    }//GEN-LAST:event_closeWindow


    private FileEntity getFile(){
        FileEntity file = new FileEntity();
        file.setGraphicsCards(company.getWorkforce()[4].getSize());
        file.setPowerSupplies(company.getWorkforce()[1].getSize());
        file.setRAMs(company.getWorkforce()[0].getSize());
        file.setBasePlates(company.getWorkforce()[3].getSize());
        file.setCPUs(company.getWorkforce()[2].getSize());
        file.setIntegrators(company.getWorkforce()[5].getSize());
        file.setDeadLineDays(Global.daysBetweenReleases);
        file.setDurationDay((int)Global.daysDuration);
        return file;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel BasePlateCost;
    private javax.swing.JLabel BasePlatesLabel;
    private javax.swing.JProgressBar BasePlatesProgressBar;
    private javax.swing.JLabel CPUCost;
    private javax.swing.JLabel CPULabel;
    private javax.swing.JProgressBar CPUProgressBar;
    private javax.swing.JLabel CompanyCosts;
    private javax.swing.JLabel CompanyEarnings;
    private javax.swing.JLabel CompanyUtilitys;
    private javax.swing.JLabel Costs;
    private javax.swing.JLabel CostsLabel;
    private javax.swing.JLabel CountDown;
    private javax.swing.JLabel DaysLeftLabel;
    private javax.swing.JLabel DirectorCostLabel;
    private javax.swing.JLabel DirectorCosts;
    private javax.swing.JLabel DirectorStatus;
    private javax.swing.JLabel DirectorStatusLabel;
    private javax.swing.JLabel EarningsLabel;
    private javax.swing.JLabel Faults;
    private javax.swing.JLabel FaultsLabel;
    private javax.swing.JLabel GraphicCardCost;
    private javax.swing.JLabel GraphicCardLabel;
    private javax.swing.JProgressBar GraphicCardProgressBar;
    private javax.swing.JLabel GraphicPCLabel;
    private javax.swing.JLabel GraphicPCQuantity;
    private javax.swing.JLabel IntegratorCostLabel;
    private javax.swing.JLabel IntegratorQuantity;
    private javax.swing.JLabel IntegratorsQuantity;
    private javax.swing.JLabel NormalPCLabel;
    private javax.swing.JLabel NormalPCQuantity;
    private javax.swing.JLabel PMCost;
    private javax.swing.JLabel PMCostLabel;
    private javax.swing.JLabel PMStatus;
    private javax.swing.JLabel PMStatusLabel;
    private javax.swing.JLabel PowerSupplyCost;
    private javax.swing.JLabel PowerSupplyLabel;
    private javax.swing.JProgressBar PowerSupplyProgressBar;
    private javax.swing.JLabel RAMCost;
    private javax.swing.JLabel RAMLabel;
    private javax.swing.JProgressBar RAMProgressBar;
    private javax.swing.JLabel UtilityLabel;
    private javax.swing.JLabel WBPQuantity;
    private javax.swing.JLabel WCPUQuantity;
    private javax.swing.JLabel WFEQuantity;
    private javax.swing.JLabel WRAMQuantity;
    private javax.swing.JLabel WTGQuantity;
    private javax.swing.JLabel WorkersAvailableLabel;
    private javax.swing.JLabel WorkersAvailableQuantity;
    private javax.swing.JLabel WorkersBPLabel;
    private javax.swing.JLabel WorkersCPULabel;
    private javax.swing.JLabel WorkersFELabel;
    private javax.swing.JLabel WorkersIntegratorsLabel;
    private javax.swing.JLabel WorkersRAMLabel;
    private javax.swing.JLabel WorkersTGLabel;
    private javax.swing.JLabel bg5;
    private javax.swing.JLabel bg6;
    private javax.swing.JLabel bg7;
    private javax.swing.JLabel bg8;
    private javax.swing.JLabel bg9;
    private javax.swing.JLabel bgLabel;
    private javax.swing.JLabel companyLogo;
    private javax.swing.JButton minusButton1;
    private javax.swing.JButton minusButton2;
    private javax.swing.JButton minusButton3;
    private javax.swing.JButton minusButton4;
    private javax.swing.JButton minusButton5;
    private javax.swing.JButton minusButton6;
    private javax.swing.JButton plusButton1;
    private javax.swing.JButton plusButton2;
    private javax.swing.JButton plusButton3;
    private javax.swing.JButton plusButton4;
    private javax.swing.JButton plusButton5;
    private javax.swing.JButton plusButton6;
    private javax.swing.JLabel textBasePlate;
    private javax.swing.JLabel textCPU;
    private javax.swing.JLabel textGraphicCard;
    private javax.swing.JLabel textPowerSupply;
    private javax.swing.JLabel textRAM;
    // End of variables declaration//GEN-END:variables


    public javax.swing.JLabel getWorkersTGQuantity() {
        return WTGQuantity;
    }

    public javax.swing.JLabel getWorkersBPQuantity() {
        return WBPQuantity;
    }
 
    public javax.swing.JLabel getWorkersCPUQuantity() {
        return WCPUQuantity;
    }

    public javax.swing.JLabel getWorkersIntegratorsQuantity() {
        return IntegratorsQuantity;
    }

    public javax.swing.JLabel getWorkersFEQuantity() {
        return WFEQuantity;
    }

    public javax.swing.JLabel getWorkersRAMQuantity() {
        return WRAMQuantity;
    }

    public javax.swing.JProgressBar getGraphicCardProgress() {
        return GraphicCardProgressBar;
    }

    public javax.swing.JLabel getWorkersAvailableQuantity() {
        return WorkersAvailableQuantity;
    }

    public javax.swing.JLabel getCompanyCosts() {
        return CompanyCosts;
    }

    public javax.swing.JLabel getCompanyEarnings() {
        return CompanyEarnings;
    }

    public javax.swing.JProgressBar getBasePlatesProgress() {
        return BasePlatesProgressBar;
    }

    public javax.swing.JProgressBar getCPUProgress() {
        return CPUProgressBar;
    }

    public javax.swing.JProgressBar getPowerSupplyProgress() {
        return PowerSupplyProgressBar;
    }

    public javax.swing.JProgressBar getRAMProgress() {
        return RAMProgressBar;
    }

    public javax.swing.JLabel getCompanyUtilitys() {
        return CompanyUtilitys;
    }

    public javax.swing.JLabel getDirectorCosts() {
        return DirectorCosts;
    }

    public javax.swing.JLabel getcostPM() {
        return PMCost;
    }

    public javax.swing.JLabel getGraphicCardCost() {
        return GraphicCardCost;
    }

    public javax.swing.JLabel getFaults() {
        return Faults;
    }

    public javax.swing.JLabel getBasePlateCost() {
        return BasePlateCost;
    }
    
    public javax.swing.JLabel getCPUCost() {
        return CPUCost;
    }

    public javax.swing.JLabel getPowerSupplyCost() {
        return PowerSupplyCost;
    }

    public javax.swing.JLabel getRAMCost() {
        return RAMCost;
    }

    public javax.swing.JLabel getStatusDirector() {
        return DirectorStatus;
    }

    public javax.swing.JLabel getStatusPM() {
        return PMStatus;
    }

    public javax.swing.JLabel getCountDown() {
        return CountDown;
    }

    public javax.swing.JLabel gettextGraphicCard() {
        return textGraphicCard;
    }

    public javax.swing.JLabel gettextBasePlate() {
        return textBasePlate;
    }

    public javax.swing.JLabel gettextCPU() {
        return textCPU;
    }

    public javax.swing.JLabel gettextPowerSupply() {
        return textPowerSupply;
    }

    public javax.swing.JLabel getTextRAM() {
        return textRAM;
    }
    
    public javax.swing.JLabel getIntegratorCost() {
        return IntegratorCostLabel;
    }

}
